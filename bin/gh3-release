#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var log = require('verbalize');
var argv = require('minimist')(process.argv.slice(2));
var config = require('config');
var Api = require('../lib/gh3-api');

log.info('Config', config);

var Debug = require('console-debug');

//var console = new Debug({
//    uncaughtExceptionCatch: true, // Do we want to catch uncaughtExceptions?
//    consoleFilter: ['LOG'], // Filter these console output types, Examples: 'LOG', 'WARN', 'ERROR', 'DEBUG', 'INFO'
//    logToFile: true, // if true, will put console output in a log file folder called 'logs'
//    logFilter: ['LOG','DEBUG','INFO'], // Examples: Filter these types to not log to file, Examples: 'LOG', 'WARN', 'ERROR', 'DEBUG', 'INFO'
//    colors: true // do we want pretty pony colors in our console output?
//}); 

/**
 * Everything in the file should be customized
 */


// Verbalize `runner`
log.runner = 'gh3releaseio';

/**
* Taking arguments
*/

// Use `-t` or `--task` to specify the text to append
var token = argv.t || argv.token || config.get('GitHub.Token');
var repo = argv.r || argv.repo || config.get('GitHub.Repo');
var interval = argv.i || argv.interval || argv.d || argv.diff;


/**
 * Application
 */
 
console.log('T:', token, repo, interval);

try {
    var api = new Api(token, repo);
    api.getNotes(interval);
} catch(e) {
   log.error(e.message); 
}
